# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

type cert_manager_service, sadomain, domain;
type cert_manager_service_exec, exec_attr, file_attr, system_file_attr;

init_daemon_domain(cert_manager_service);

binder_call(cert_manager_service, samgr);

allow cert_manager_service accesstoken_service:binder { call };
allow cert_manager_service data_file:dir { search };
allow cert_manager_service data_service_el1_file:dir { search };
allow cert_manager_service cert_manager_service_file:dir { add_name create open read remove_name search write rmdir getattr setattr };
allow cert_manager_service cert_manager_service_file:file { create getattr ioctl open read setattr unlink write };
allow cert_manager_service data_service_file:dir { search };
allow cert_manager_service debug_param:file { read open map };
allow cert_manager_service dev_console_file:chr_file { read write };
allow cert_manager_service dev_unix_socket:dir { search };
allow cert_manager_service foundation:binder { call transfer };
allow cert_manager_service hilog_param:file { read open map };
allow cert_manager_service huks_service:binder { call };
allow cert_manager_service param_watcher:binder { call transfer };
allow cert_manager_service sa_accesstoken_manager_service:samgr_class { get add };
allow cert_manager_service sa_cert_manager_service:samgr_class { get add };
allow cert_manager_service sa_foundation_cesfwk_service:samgr_class { get };
allow cert_manager_service sa_huks_service:samgr_class { get add };
allow cert_manager_service sa_param_watcher:samgr_class { get };
allow cert_manager_service tracefs:dir { search };
allow cert_manager_service tracefs_trace_marker_file:file { open write };
allowxperm cert_manager_service cert_manager_service_file:file ioctl { 0x5413 0xf546 0xf547 };

#avc:  denied  { read } for  pid=6711 comm="cert_manager_se" name="u:object_r:musl_param:s0" dev="tmpfs" ino=56 scontext=u:r:cert_manager_service:s0 tcontext=u:object_r:musl_param:s0 tclass=file permissive=1
#avc:  denied  { open } for  pid=6711 comm="cert_manager_se" path="/dev/__parameters__/u:object_r:musl_param:s0" dev="tmpfs" ino=56 scontext=u:r:cert_manager_service:s0 tcontext=u:object_r:musl_param:s0 tclass=file permissive=1
#avc:  denied  { map } for  pid=6711 comm="cert_manager_se" path="/dev/__parameters__/u:object_r:musl_param:s0" dev="tmpfs" ino=56 scontext=u:r:cert_manager_service:s0 tcontext=u:object_r:musl_param:s0 tclass=file permissive=1
allow cert_manager_service musl_param:file { map open read };

#avc:  denied  { search } for  pid=6764 comm="cert_manager_se" name="bin" dev="mmcblk0p7" ino=112 scontext=u:r:cert_manager_service:s0 tcontext=u:object_r:system_bin_file:s0 tclass=dir permissive=1
allow cert_manager_service system_bin_file:dir { search };

#avc:  denied  { getopt } for  pid=1564 comm="cert_manager_se" scontext=u:r:cert_manager_service:s0 tcontext=u:r:cert_manager_service:s0 tclass=unix_dgram_socket permissive=1
#avc:  denied  { getopt } for  pid=1564 comm="cert_manager_se" scontext=u:r:cert_manager_service:s0 tcontext=u:r:cert_manager_service:s0 tclass=unix_dgram_socket permissive=1
allow cert_manager_service cert_manager_service:unix_dgram_socket { getopt setopt };

#avc: denied { read } for pid=18044 comm="cert_manager_se" name="online" dev="sysfs" ino=27674 scontext=u:r:cert_manager_service:s0 tcontext=u:object_r:sysfs_devices_system_cpu:s0 tclass=file permissive=1
#avc: denied { open } for pid=18044 comm="cert_manager_se" path="/sys/devices/system/cpu/online" dev="sysfs" ino=27674 scontext=u:r:cert_manager_service:s0 tcontext=u:object_r:sysfs_devices_system_cpu:s0 tclass=file permissive=1
#avc: denied { getattr } for pid=18044 comm="cert_manager_se" path="/sys/devices/system/cpu/online" dev="sysfs" ino=27674 scontext=u:r:cert_manager_service:s0 tcontext=u:object_r:sysfs_devices_system_cpu:s0 tclass=file permissive=1
allow cert_manager_service sysfs_devices_system_cpu:file { read open getattr };

allow cert_manager_service distributeddata:binder { transfer call };
allow cert_manager_service distributeddata:fd { use };

#avc:  denied  { get } for service=3524 sid=u:r:cert_manager_service:s0 scontext=u:r:cert_manager_service:s0 tcontext=u:object_r:sa_sg_collect_service:s0 tclass=samgr_class permissive=0
allow cert_manager_service sa_sg_collect_service:samgr_class { get };

#avc:  denied  { call } for  pid=1456 comm="cert_manager_se" scontext=u:r:cert_manager_service:s0 tcontext=u:r:security_guard:s0 tclass=binder permissive=0
allow cert_manager_service security_guard:binder { call };

#avc:  denied  { lock } for  pid=1456 comm="OS_IPC_0_1471" path="/data/service/el1/public/cert_manager_service/rdb/cert_manager.db" dev="mmcblk0p15" ino=3210 scontext=u:r:cert_manager_service:s0 tcontext=u:object_r:cert_manager_service_file:s0 tclass=file permissive=0
#avc:  denied  { map } for  pid=1462 comm="OS_IPC_2_1490" path="/data/service/el1/public/cert_manager_service/rdb/cert_manager.db-shm" dev="mmcblk0p15" ino=4138 scontext=u:r:cert_manager_service:s0 tcontext=u:object_r:cert_manager_service_file:s0 tclass=file permissive=0
allow cert_manager_service cert_manager_service_file:file { lock map };

#avc:  denied  { ioctl } for  pid=1462 comm="OS_IPC_2_1490" path="/data/service/el1/public/cert_manager_service/rdb/cert_manager.db" dev="mmcblk0p15" ino=3210 ioctlcmd=0xf50c scontext=u:r:cert_manager_service:s0 tcontext=u:object_r:cert_manager_service_file:s0 tclass=file permissive=0
allowxperm cert_manager_service cert_manager_service_file:file ioctl { 0xf50c };

#avc:  denied  { open } for  pid=1430 comm="OS_IPC_1_1446" path="/dev/ashmem" dev="tmpfs" ino=256 scontext=u:r:cert_manager_service:s0 tcontext=u:object_r:dev_ashmem_file:s0 tclass=chr_file permissive=0
allow cert_manager_service dev_ashmem_file:chr_file { open };
