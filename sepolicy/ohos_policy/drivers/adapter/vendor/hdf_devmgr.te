# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


init_daemon_domain(hdf_devmgr);

#avc:  denied  { entrypoint } for  pid=235 comm="init" path="/vendor/bin/hdf_devmgr" dev="mmcblk0p6" ino=14 scontext=u:r:hdf_devmgr:s0 tcontext=u:object_r:hdf_devmgr_exec:s0 tclass=file permissive=1
allow hdf_devmgr hdf_devmgr_exec:file { entrypoint };

#avc:  denied  { call } for  pid=242 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:power_host:s0 tclass=binder permissive=1
allow hdf_devmgr power_host:binder call;

#avc:  denied  { check_context } for  pid=243 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:object_r:security:s0 tclass=security permissive=1
#avc:  denied  { compute_av } for  pid=236 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:object_r:security:s0 tclass=security permissive=1
allow hdf_devmgr security:security { check_context compute_av };

#avc:  denied  { search } for  pid=243 comm="hdf_devmgr" name="/" dev="selinuxfs" ino=1 scontext=u:r:hdf_devmgr:s0 tcontext=u:object_r:selinuxfs:s0 tclass=dir permissive=1
allow hdf_devmgr selinuxfs:dir { search };

#avc:  denied  { open } for  pid=243 comm="hdf_devmgr" path="/sys/fs/selinux/context" dev="selinuxfs" ino=5 scontext=u:r:hdf_devmgr:s0 tcontext=u:object_r:selinuxfs:s0 tclass=file permissive=1
#avc:  denied  { read write } for  pid=243 comm="hdf_devmgr" name="context" dev="selinuxfs" ino=5 scontext=u:r:hdf_devmgr:s0 tcontext=u:object_r:selinuxfs:s0 tclass=file permissive=1
allow hdf_devmgr selinuxfs:file { open read write };

#avc:  denied  { search } for  pid=236 comm="hdf_devmgr" name="643" dev="proc" ino=683 scontext=u:r:hdf_devmgr:s0 tcontext=u:r:telephony_sa:s0 tclass=dir permissive=1
allow hdf_devmgr telephony_sa:dir { search };

#avc:  denied  { open } for  pid=243 comm="hdf_devmgr" path="/proc/593/attr/current" dev="proc" ino=24187 scontext=u:r:hdf_devmgr:s0 tcontext=u:r:telephony_sa:s0 tclass=file permissive=1
#avc:  denied  { read } for  pid=243 comm="hdf_devmgr" name="current" dev="proc" ino=24187 scontext=u:r:hdf_devmgr:s0 tcontext=u:r:telephony_sa:s0 tclass=file permissive=1
allow hdf_devmgr telephony_sa:file { open read };

#avc:  denied  { getattr } for  pid=243 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:telephony_sa:s0 tclass=process permissive=1
allow hdf_devmgr telephony_sa:process { getattr };

#avc:  denied  { ioctl } for  pid=245 comm="hdf_devmgr" path="/dev/hdf_kevent" dev="tmpfs" ino=199 ioctlcmd=0x6201 scontext=u:r:hdf_devmgr:s0 tcontext=u:object_r:dev_file:s0 tclass=chr_file permissive=1
#avc:  denied  { ioctl } for  pid=245 comm="hdf_devmgr" path="/dev/hdf_kevent" dev="tmpfs" ino=199 ioctlcmd=0x6202 scontext=u:r:hdf_devmgr:s0 tcontext=u:object_r:dev_file:s0 tclass=chr_file permissive=1
allow hdf_devmgr dev_hdf_kevent:chr_file { ioctl };
allowxperm hdf_devmgr dev_hdf_kevent:chr_file ioctl { 0x6201 0x6202 };

#avc:  denied  { create } for  pid=239 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:hdf_devmgr:s0 tclass=netlink_kobject_uevent_socket permissive=1
#avc:  denied  { setopt } for  pid=239 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:hdf_devmgr:s0 tclass=netlink_kobject_uevent_socket permissive=1
#avc:  denied  { bind } for  pid=239 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:hdf_devmgr:s0 tclass=netlink_kobject_uevent_socket permissive=1
#avc:  denied  { read } for  pid=239 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:hdf_devmgr:s0 tclass=netlink_kobject_uevent_socket permissive=1
allow hdf_devmgr hdf_devmgr:netlink_kobject_uevent_socket { create bind setopt read };
#avc:  denied  { ioctl } for  pid=247 comm="IPC_5_569" path="/dev/dev_mgr" dev="tmpfs" ino=207 ioctlcmd=0x6201 scontext=u:r:hdf_devmgr:s0 tcontext=u:object_r:dev_mgr_file:s0 tclass=chr_file permissive=1
#avc:  denied  { read write } for  pid=251 comm="IPC_3_563" name="dev_mgr" dev="tmpfs" ino=207 scontext=u:r:hdf_devmgr:s0 tcontext=u:object_r:dev_mgr_file:s0 tclass=chr_file permissive=0
allow hdf_devmgr dev_mgr_file:chr_file { getattr read write open ioctl };
allowxperm hdf_devmgr dev_mgr_file:chr_file ioctl 0x6201;

# for testcase start
#avc:  denied  { call } for  pid=240 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:sh:s0 tclass=binder permissive=1
#avc:  denied  { call } for  pid=240 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:sample_host:s0 tclass=binder permissive=1
#avc:  denied  { read } for  pid=241 comm="hdf_devmgr" name="current" dev="proc" ino=30596 scontext=u:r:hdf_devmgr:s0 tcontext=u:r:sample_host:s0 tclass=file permissive=0
#avc:  denied  { open } for  pid=246 comm="hdf_devmgr" path="/proc/2127/attr/current" dev="proc" ino=30142 scontext=u:r:hdf_devmgr:s0 tcontext=u:r:sample_host:s0 tclass=file permissive=0
#avc:  denied  { getattr } for  pid=244 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:sample_host:s0 tclass=process permissive=0
#avc:  denied  { transfer } for  pid=238 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:sample_host:s0 tclass=binder permissive=0
#avc:  denied  { search } for  pid=241 comm="hdf_devmgr" name="2029" dev="proc" ino=32820 scontext=u:r:hdf_devmgr:s0 tcontext=u:r:sample_host:s0 tclass=dir permissive=1
#avc:  denied  { transfer } for  pid=241 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:sh:s0 tclass=binder permissive=1
#avc:  denied  { search } for  pid=241 comm="hdf_devmgr" name="1998" dev="proc" ino=31745 scontext=u:r:hdf_devmgr:s0 tcontext=u:r:sh:s0 tclass=dir permissive=1
#avc:  denied  { read } for  pid=241 comm="hdf_devmgr" name="current" dev="proc" ino=31058 scontext=u:r:hdf_devmgr:s0 tcontext=u:r:sh:s0 tclass=file permissive=1
#avc:  denied  { open } for  pid=241 comm="hdf_devmgr" path="/proc/2125/attr/current" dev="proc" ino=31058 scontext=u:r:hdf_devmgr:s0 tcontext=u:r:sh:s0 tclass=file permissive=1
#avc:  denied  { getattr } for  pid=241 comm="hdf_devmgr" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:sh:s0 tclass=process permissive=1
allow hdf_devmgr sample_host:binder { call transfer };
allow hdf_devmgr sample_host:file { read open };
allow hdf_devmgr sample_host:process { getattr };
allow hdf_devmgr sample_host:dir { search };
debug_only(`
    allow hdf_devmgr sh:binder { call transfer };
    allow hdf_devmgr sh:dir { search };
    allow hdf_devmgr sh:file { open read };
    allow hdf_devmgr sh:process { getattr };
')
# for testcase end

allow hdf_devmgr a2dp_host:binder { call transfer };
allow hdf_devmgr a2dp_host:dir { search };
allow hdf_devmgr a2dp_host:file { open read };
allow hdf_devmgr a2dp_host:process { getattr };
allow hdf_devmgr blue_host:binder { call transfer };
allow hdf_devmgr blue_host:dir { search };
allow hdf_devmgr blue_host:file { open read };
allow hdf_devmgr blue_host:process { getattr };
allow hdf_devmgr bluetooth_service:binder { transfer };
allow hdf_devmgr bluetooth_service:dir { search };
allow hdf_devmgr bluetooth_service:file { open read };
allow hdf_devmgr bluetooth_service:process { getattr };
allow hdf_devmgr bootevent_param:file { map open read };
allow hdf_devmgr bootevent_samgr_param:file { map open read };
allow hdf_devmgr build_version_param:file { map open read };
allow hdf_devmgr camera_service:binder { call transfer };
allow hdf_devmgr camera_service:dir { search };
allow hdf_devmgr camera_service:file { open read };
allow hdf_devmgr camera_service:process { getattr };
allow hdf_devmgr drm_service:binder { call transfer };
allow hdf_devmgr drm_service:dir { search };
allow hdf_devmgr drm_service:file { open read };
allow hdf_devmgr drm_service:process { getattr };
allow hdf_devmgr const_allow_mock_param:file { map open read };
allow hdf_devmgr const_allow_param:file { map open read };
allow hdf_devmgr const_build_param:file { map open read };
allow hdf_devmgr const_display_brightness_param:file { map open read };
allow hdf_devmgr const_param:file { map open read };
allow hdf_devmgr const_postinstall_fstab_param:file { map open read };
allow hdf_devmgr const_postinstall_param:file { map open read };
allow hdf_devmgr const_product_param:file { map open read };
allow hdf_devmgr dcamera:binder { call transfer };
allow hdf_devmgr dcamera:dir { search };
allow hdf_devmgr dcamera:file { open read };
allow hdf_devmgr dcamera_host:binder { call transfer };
allow hdf_devmgr dcamera_host:dir { search };
allow hdf_devmgr dcamera_host:file { open read };
allow hdf_devmgr dcamera_host:process { getattr };
allow hdf_devmgr dcamera:process { getattr };
allow hdf_devmgr dscreen:binder { transfer };
allow hdf_devmgr dscreen:dir { search };
allow hdf_devmgr dscreen:file { open read };
allow hdf_devmgr dscreen:process { getattr };
allow hdf_devmgr debug_param:file { map open read };
allow hdf_devmgr default_param:file { map open read };
allow hdf_devmgr dev_hdf_kevent:chr_file { getattr ioctl open read write };
allow hdf_devmgr dev_kmsg_file:chr_file { open write };
allow hdf_devmgr dev_unix_socket:dir { search };
allow hdf_devmgr distributedsche_param:file { map open read };
allow hdf_devmgr foundation:binder { call transfer };
allow hdf_devmgr foundation:dir { search };
allow hdf_devmgr foundation:file { open read };
allow hdf_devmgr foundation:process { getattr };
allow hdf_devmgr hilog_param:file { map open read };
allow hdf_devmgr hw_sc_build_os_param:file { map open read };
allow hdf_devmgr hw_sc_build_param:file { map open read };
allow hdf_devmgr hw_sc_param:file { map open read };
allow hdf_devmgr init_param:file { map open read };
allow hdf_devmgr init_svc_param:file { map open read };
allow hdf_devmgr input_pointer_device_param:file { map open read };
allow hdf_devmgr input_user_host:binder { call transfer };
allow hdf_devmgr input_user_host:dir { search };
allow hdf_devmgr input_user_host:file { open read };
allow hdf_devmgr input_user_host:process { getattr };
allow hdf_devmgr kernel:unix_stream_socket { connectto };
allow hdf_devmgr location_host:binder { call transfer };
allow hdf_devmgr location_host:dir { search };
allow hdf_devmgr location_host:file { open read };
allow hdf_devmgr location_host:process { getattr };
allow hdf_devmgr locationhub:binder { transfer };
allow hdf_devmgr locationhub:dir { search };
allow hdf_devmgr locationhub:file { open read };
allow hdf_devmgr locationhub:process { getattr };
allow hdf_devmgr media_service:binder { transfer };
allow hdf_devmgr media_service:dir { search };
allow hdf_devmgr media_service:file { open read };
allow hdf_devmgr media_service:process { getattr };
allow hdf_devmgr mmi_uinput_service:binder { transfer };
allow hdf_devmgr mmi_uinput_service:dir { search };
allow hdf_devmgr mmi_uinput_service:file { open read };
allow hdf_devmgr mmi_uinput_service:process { getattr };
allow hdf_devmgr multimodalinput:binder { transfer };
allow hdf_devmgr multimodalinput:dir { search };
allow hdf_devmgr multimodalinput:file { open read };
allow hdf_devmgr multimodalinput:process { getattr };
allow hdf_devmgr net_param:file { map open read };
allow hdf_devmgr net_tcp_param:file { map open read };
allow hdf_devmgr normal_hap_attr:binder { transfer };
allow hdf_devmgr normal_hap_attr:dir { search };
allow hdf_devmgr normal_hap_attr:file { open read };
allow hdf_devmgr normal_hap_attr:process { getattr };
allow hdf_devmgr ohos_boot_param:file { map open read };
allow hdf_devmgr ohos_param:file { map open read };
allow hdf_devmgr ohos_param:parameter_service { set };
allow hdf_devmgr paramservice_socket:sock_file { write };
allow hdf_devmgr persist_param:file { map open read };
allow hdf_devmgr persist_sys_param:file { map open read };
allow hdf_devmgr power_host:binder { transfer };
allow hdf_devmgr power_host:dir { search };
allow hdf_devmgr power_host:file { open read };
allow hdf_devmgr power_host:process { getattr };
binder_call(hdf_devmgr, powermgr);
allow hdf_devmgr powermgr:dir { search };
allow hdf_devmgr powermgr:file { open read };
allow hdf_devmgr powermgr:process { getattr };
allow hdf_devmgr sa_device_service_manager:samgr_class { add };
allow hdf_devmgr security_param:file { map open read };
allow hdf_devmgr selinuxfs:dir { open read };
allow hdf_devmgr selinuxfs:file { map };
allow hdf_devmgr startup_param:file { map open read };
allow hdf_devmgr sys_param:file { map open read };
allow hdf_devmgr system_bin_file:dir { search };
allow hdf_devmgr system_core_hap_attr:binder { transfer };
allow hdf_devmgr system_core_hap_attr:dir { search };
allow hdf_devmgr system_core_hap_attr:file { open read };
allow hdf_devmgr system_core_hap_attr:process { getattr };
allow hdf_devmgr sys_usb_param:file { map open read };
allow hdf_devmgr usb_host:binder { call transfer };
allow hdf_devmgr usb_host:dir { search };
allow hdf_devmgr usb_host:file { open read };
allow hdf_devmgr usb_host:process { getattr };
allow hdf_devmgr usb_service:binder { transfer };
allow hdf_devmgr usb_service:dir { search };
allow hdf_devmgr usb_service:file { open read };
allow hdf_devmgr usb_service:process { getattr };
allow hdf_devmgr vendor_etc_file:dir { search };
allow hdf_devmgr vendor_etc_file:file { getattr open read };
allow hdf_devmgr telephony_sa:binder { call };
allowxperm hdf_devmgr dev_hdf_kevent:chr_file ioctl { 0x6203 };

# avc:  denied  { search } for  pid=571 comm="IPC_0_581" name="1364" dev="proc" ino=31517 scontext=u:r:hdf_devmgr:s0 tcontext=u:r:wifi_manager_service:s0 tclass=dir permissive=1
allow hdf_devmgr wifi_manager_service:dir { search };

# avc:  denied  { read } for  pid=562 comm="IPC_1_572" name="current" dev="proc" ino=19801 scontext=u:r:hdf_devmgr:s0 tcontext=u:r:wifi_manager_service:s0 tclass=file permissive=1
allow hdf_devmgr wifi_manager_service:file { open read };

# avc:  denied  { getattr } for  pid=571 comm="IPC_0_581" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:wifi_manager_service:s0 tclass=process permissive=1
allow hdf_devmgr wifi_manager_service:process { getattr };

# avc:  denied  { transfer } for  pid=562 comm="IPC_1_572" scontext=u:r:hdf_devmgr:s0 tcontext=u:r:wifi_manager_service:s0 tclass=binder permissive=1
allow hdf_devmgr wifi_manager_service:binder { transfer };
