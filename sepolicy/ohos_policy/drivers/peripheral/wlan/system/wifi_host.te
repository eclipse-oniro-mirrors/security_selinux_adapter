# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# avc:  denied  { get } for scontext=u:r:wifi_host:s0 tcontext=u:r:sa_cert_manager_service:s0 tclass=samgr_class permissive=1
allow wifi_host sa_cert_manager_service:samgr_class { get };

# avc:  denied  { call } for scontext=u:r:wifi_host:s0 tcontext=u:r:cert_manager_service:s0 tclass=binder permissive=1
allow wifi_host cert_manager_service:binder { call };

# avc:  denied  { write } for scontext=u:r:wifi_host:s0 tcontext=u:r:dev_kmsg_file:s0 tclass=chr_file permissive=1
allow wifi_host dev_kmsg_file:chr_file { write };

# avc:  denied  { add } for scontext=u:r:wifi_host:s0 tcontext=u:r:hdf_chip_interface_service:s0 tclass=hdf_devmgr_class permissive=1
allow wifi_host hdf_chip_interface_service:hdf_devmgr_class { add };

# avc:  denied  { transfer } for scontext=u:r:wifi_host:s0 tcontext=u:r:wifi_manager_service:s0 tclass=binder permissive=1
allow wifi_host wifi_manager_service:binder { transfer };

# avc:  denied  { write } for scontext=u:r:wifi_host:s0 tcontext=u:r:paramservice_socket:s0 tclass=sock_file permissive=1
allow wifi_host paramservice_socket:sock_file { write };

# avc:  denied  { connectto } for scontext=u:r:wifi_host:s0 tcontext=u:r:kernel:s0 tclass=unix_stream_socket permissive=1
allow wifi_host kernel:unix_stream_socket { connectto };

# avc:  denied  { nlmsg_read } for scontext=u:r:wifi_host:s0 tcontext=u:r:wifi_host:s0 tclass=netlink_route_socket permissive=1
allow wifi_host wifi_host:netlink_route_socket { nlmsg_read nlmsg_readpriv };

# avc:  denied  { open read } for scontext=u:r:wifi_host:s0 tcontext=u:object_r:sys_file:s0 tclass=dir permissive=1
allow wifi_host sys_file:dir { open read };

# avc:  denied  { open read } for scontext=u:r:wifi_host:s0 tcontext=u:object_r:sysfs_net:s0 tclass=dir permissive=1
allow wifi_host sysfs_net:dir { open read };

# avc:  denied  { ioctl } for pid=460 comm="OS_IPC_3_1123" path="socket:[18791]" dev="sockfs" info=18791 ioctlcmd=0x89f1 scontext=u:r:wifi_host:s0 tcontext=u:r:wifi_host:s0 tclass=udp_socket permissive=1
# avc:  denied  { ioctl } for pid=460 comm="OS_IPC_3_1123" path="socket:[16812]" dev="sockfs" info=18791 ioctlcmd=0x8924 scontext=u:r:wifi_host:s0 tcontext=u:r:wifi_host:s0 tclass=udp_socket permissive=1
allow wifi_host wifi_host:udp_socket { ioctl };
allowxperm wifi_host wifi_host:udp_socket ioctl { 0x89f1 0x8924 };

#avc: denied { get } for service=3510 sid=u:r:wifi_host:s0 scontext=u:r:wifi_host:s0 tcontext=u:object_r:sa_huks_service:s0 tclass=samgr_class permissive=0
allow wifi_host sa_huks_service.samgr_class ( get );  
