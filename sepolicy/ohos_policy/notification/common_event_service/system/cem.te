# Copyright (c) 2024-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

type cem, native_system_domain, domain;
type cem_exec, exec_attr, file_attr, system_file_attr;

developer_only(`
domain_auto_transition_pattern(sh, cem_exec, cem);
allow cem sa_foundation_cesfwk_service:samgr_class { get };
allow cem debug_param:file { map read open };
allow cem devpts:chr_file { ioctl read write };
allowxperm cem devpts:chr_file ioctl 0x5413;
allow cem foundation:binder { call };
allow cem samgr:binder { call };
allow samgr cem:binder { call transfer };
allow samgr cem:dir { search };
allow samgr cem:file { read open };
allow samgr cem:process { getattr };
allow cem chip_prod_file:dir { search };
allow cem dev_kmsg_file:chr_file { write };
allow cem dev_ptmx:chr_file { read write };
allow cem dev_unix_socket:dir { search };
allow cem tty_device:chr_file { read write };
allow cem dev_console_file:chr_file { read write };
allow cem persist_param:file { map read open };
# avc: denied { use } for pid=unknown, comm=unknown, cidx=0x0  path="/system/bin/cem" dev="/dev/block/platform/fa500000.ufs/by-name/system" ino=78051464 scontext=u:r:cem:s0 tcontext=u:r:sh:s0 tclass=fd permissive=0
allow cem sh:fd { use };
allow cem sh:unix_stream_socket { read write };
allow cem sh:fifo_file { ioctl read write };
allowxperm cem sh:fifo_file ioctl { 0x5413 };
')

debug_only(`
domain_auto_transition_pattern(su, cem_exec, cem);
allow cem su:fd { use };
allow cem su:unix_stream_socket { read write };
allow cem su:fifo_file { ioctl read write };
allowxperm cem su:fifo_file ioctl { 0x5413 };
allow cem sa_foundation_cesfwk_service:samgr_class { get };
allow cem debug_param:file { map read open };
allow cem devpts:chr_file { ioctl read write };
allowxperm cem devpts:chr_file ioctl 0x5413;
allow cem foundation:binder { call };
allow cem samgr:binder { call };
allow samgr cem:binder { call transfer };
allow samgr cem:dir { search };
allow samgr cem:file { read open };
allow samgr cem:process { getattr };
allow cem chip_prod_file:dir { search };
allow cem dev_kmsg_file:chr_file { write };
allow cem dev_ptmx:chr_file { read write };
allow cem dev_unix_socket:dir { search };
allow cem tty_device:chr_file { read write };
allow cem dev_console_file:chr_file { read write };
allow cem persist_param:file { map read open };
')
