# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#avc:  denied  { add } for service=1401 pid=406 scontext=u:r:distributedsche:s0 tcontext=u:object_r:sa_1401_service:s0 tclass=samgr_class permissive=1
allow distributedsche sa_distributeschedule:samgr_class { add get_remote };
allow distributedsche sa_distributeddata_service:samgr_class { get };
allow distributedsche sa_softbus_service:samgr_class { get };
allow distributedsche sa_param_watcher:samgr_class { get };
allow distributedsche sa_accesstoken_manager_service:samgr_class { get };
allow distributedsche sa_foundation_bms:samgr_class { get };
allow distributedsche sa_accountmgr:samgr_class { get };
allow distributedsche sa_foundation_abilityms:samgr_class { get };
allow distributedsche sa_foundation_appms:samgr_class { get };
allow distributedsche accessibility_param:file { map open read };
allow distributedsche accesstoken_service:binder { call };
allow distributedsche accountmgr:binder { call };
allow distributedsche data_file:dir { search };
allow distributedsche data_service_file:dir { search };
allow distributedsche data_service_el1_file:dir { add_name open read search write getattr create remove_name rmdir };
allow distributedsche data_service_el1_file:file { create getattr ioctl open read write lock map unlink rename};
allow distributedsche deviceauth_service:binder { call };
allow distributedsche device_manager:binder { transfer };
allow distributedsche dev_ashmem_file:chr_file { open };
allow distributedsche dev_unix_socket:dir { search };
allow distributedsche distributeddata:binder { call transfer };
allow distributedsche distributedsche_param:parameter_service { set };
allow distributedsche distributedsche:binder { call };
allow distributedsche distributedsche:unix_dgram_socket { getopt setopt };
allow distributedsche foundation:binder { call transfer };
allow distributedsche foundation:fd { use };
allow distributedsche kernel:unix_stream_socket { connectto };
allow distributedsche normal_hap_attr:binder { call transfer };
allow distributedsche system_basic_hap_attr:binder { call transfer };
allow distributedsche system_core_hap_attr:binder { call transfer };
allow distributedsche paramservice_socket:sock_file { write };
allow distributedsche proc_cpuinfo_file:file { open read };
allow distributedsche proc_file:file { open read };
allow distributedsche softbus_server:binder { call transfer };
allow distributedsche softbus_server:fd { use };
allow distributedsche softbus_server:tcp_socket { read setopt shutdown write };
allow distributedsche sa_device_security_level_manager_service:samgr_class { get };
allow distributedsche dslm_service:binder { call transfer };
allow distributedsche dev_console_file:chr_file { read write };
allow distributedsche sa_foundation_wms:samgr_class { get };

allow distributedsche sa_foundation_devicemanager_service:samgr_class { get };
allow distributedsche devinfo_private_param:file { map open read};
allow distributedsche sa_form_mgr_service:samgr_class { get };

debug_only(`
    allow distributedsche sh:binder { call };
')

#avc:  denied  { get } for service=1903 pid=469 scontext=u:r:distributedsche:s0 tcontext=u:object_r:sa_bgtaskmgr:s0 tclass=samgr_class permissive=1
allow distributedsche sa_bgtaskmgr:samgr_class { get };
#avc:  denied  { get } for service=1909 pid=560 scontext=u:r:distributedsche:s0 tcontext=u:object_r:sa_memory_manager_service:s0 tclass=samgr_class permissive=0
allow distributedsche sa_memory_manager_service:samgr_class { get };
#avc:  denied  { call } for  pid=479 comm="DmsComponentCha" scontext=u:r:distributedsche:s0 tcontext=u:r:memmgrservice:s0 tclass=binder permissive=0
allow distributedsche memmgrservice:binder { call };
#avc:  denied  { get } for service=402 pid=3055 scontext=u:r:distributedsche:s0 tcontext=u:object_r:sa_distributed_bundle_mgr_service_service:s0 tclass=samgr_class permissive=1
allow distributedsche sa_distributed_bundle_mgr_service_service:samgr_class { get };
#avc:  denied  { call } for  pid=479 comm="continue_manage" scontext=u:r:distributedsche:s0 tcontext=u:r:d-bms:s0 tclass=binder permissive=0
allow distributedsche d-bms:binder { call };
#avc:  denied  { get } for service=4606 pid=2716 scontext=u:r:distributedsche:s0 tcontext=u:object_r:sa_foundation_wms:s0 tclass=samgr_class permissive=1
allow distributedsche sa_foundation_wms:samgr_class { get };
#avc:  denied  { get } for service=3299 pid=3829 scontext=u:r:distributedsche:s0 tcontext=u:object_r:sa_foundation_cesfwk_service:s0 tclass=samgr_class permissive=0
allow distributedsche sa_foundation_cesfwk_service:samgr_class { get };
#avc:  denied  { read } for  pid=2255 comm="distributedsche" name="u:object_r:arkcompiler_param:s0" dev="tmpfs" ino=148 scontext=u:r:distributedsche:s0 tcontext=u:object_r:arkcompiler_param:s0 tclass=file permissive=0
allow distributedsche arkcompiler_param:file { read map open };
allow distributedsche ark_writeable_param:file { read map open };
#avc:  denied  { read } for  pid=2255 comm="distributedsche" name="online" dev="sysfs" ino=27676 scontext=u:r:distributedsche:s0 tcontext=u:object_r:sysfs_devices_system_cpu:s0 tclass=file permissive=0
allow distributedsche sysfs_devices_system_cpu:file { read };
#avc:  denied  { setattr } for  pid=2255 comm="dmsDataStorageH" name="gen_natural_store.db" dev="sdd78" ino=60840 scontext=u:r:distributedsche:s0 tcontext=u:object_r:data_service_el1_file:s0 tclass=file permissive=0
allow distributedsche data_service_el1_file:file { setattr };
#avc:  denied  { use } for  pid=2263 comm="IPC_1_2266" path="/dev/ashmem" dev="tmpfs" ino=612 scontext=u:r:distributedsche:s0 tcontext=u:r:render_service:s0 tclass=fd permissive=1
allow distributedsche render_service:fd { use };
#avc:  denied  { open } for  pid=3435 comm="deviceprofile" path="/sys/devices/system/cpu/online" dev="sysfs" ino=30137 scontext=u:r:distributedsche:s0 tcontext=u:object_r:sysfs_devices_system_cpu:s0 tclass=file permissive=0
allow distributedsche sysfs_devices_system_cpu:file { open };
#avc:  denied  { read } for  pid=4101 comm="mmi_EventHdr" scontext=u:r:distributedsche:s0 tcontext=u:r:multimodalinput:s0 tclass=unix_stream_socket permissive=1
allow distributedsche multimodalinput:unix_stream_socket { read };
#avc:  denied  { get } for service=3101 pid=3284 scontext=u:r:distributedsche:s0 tcontext=u:object_r:sa_multimodalinput_service:s0 tclass=samgr_class permissive=1
allow distributedsche sa_multimodalinput_service:samgr_class { get };
#avc:  denied  { use } for  pid=761 comm="IPC_1_779" path="socket:[100099]" dev="sockfs" ino=100099 scontext=u:r:distributedsche:s0 tcontext=u:r:multimodalinput:s0 tclass=fd permissive=0
allow distributedsche multimodalinput:fd { use };
#avc:  denied  { write } for  pid=761 comm="multimodalinput" path="socket:[47027]" dev="sockfs" ino=47027 scontext=u:r:distributedsche:s0 tcontext=u:r:multimodalinput:s0 tclass=unix_stream_socket permissive=0
allow distributedsche multimodalinput:unix_stream_socket { write };
#avc:  denied  { getattr } for  pid=10752 comm="distributedsche" path="/sys/devices/system/cpu/online" dev="sysfs" ino=30409 scontext=u:r:distributedsche:s0 tcontext=u:object_r:sysfs_devices_system_cpu:s0 tclass=file permissive=0
allow distributedsche sysfs_devices_system_cpu:file { getattr };
#avc:  denied  { write } for  pid=10752 comm="sa_main" path="/dev/kmsg" dev="tmpfs" ino=116 scontext=u:r:distributedsche:s0 tcontext=u:object_r:dev_kmsg_file:s0 tclass=chr_file permissive=0
allow distributedsche dev_kmsg_file:chr_file { write };
#avc: denied { read write } for pid=2684, comm="/system/bin/sa_main"  path="/dev/tty0" dev="" ino=44 scontext=u:r:distributedsche:s0 tcontext=u:object_r:tty_device:s0 tclass=chr_file permissive=1
allow distributedsche tty_device:chr_file { read write };
#avc: denied { use } for pid=1524, comm="/system/bin/sa_main"  path="/dev/ashmem" dev="" ino=1 scontext=u:r:distributedsche:s0 tcontext=u:r:distributeddata:s0 tclass=fd permissive=1
allow distributedsche distributeddata:fd { use };

neverallow {domain -samgr -distributedsche} sa_distributeschedule:samgr_class { get_remote };
