# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

##################
## Type define: ##
##################

type toybox_exec, exec_attr, file_attr, system_file_attr;

developer_only(`
# avc_audit_slow:261] avc: denied { connect } for pid=6561, comm="/bin/ftpget"  scontext=u:r:sh:s0 tcontext=u:r:sh:s0 tclass=udp_socket permissive=0
# avc_audit_slow:261] avc: denied { create } for pid=6113, comm="/bin/ftpget"  scontext=u:r:sh:s0 tcontext=u:r:sh:s0 tclass=udp_socket permissive=0
allow sh sh:udp_socket { connect create };

# avc_audit_slow:261] avc: denied { create } for pid=5705, comm="/bin/ftpget"  scontext=u:r:sh:s0 tcontext=u:r:sh:s0 tclass=tcp_socket permissive=0
# avc_audit_slow:261] avc: denied { getattr } for pid=6311, comm="/bin/ftpget"  scontext=u:r:sh:s0 tcontext=u:r:sh:s0 tclass=tcp_socket permissive=0
# avc_audit_slow:261] avc: denied { read } for pid=5863, comm="/bin/ftpget"  scontext=u:r:sh:s0 tcontext=u:r:sh:s0 tclass=tcp_socket permissive=0
# avc_audit_slow:261] avc: denied { setopt } for pid=5868, comm="/bin/ftpget"  scontext=u:r:sh:s0 tcontext=u:r:sh:s0 tclass=tcp_socket permissive=0
allow sh sh:tcp_socket { connect create setopt getattr read write };

# avc_audit_slow:261] avc: denied { name_connect } for pid=6202, comm="/bin/ftpget"  scontext=u:r:sh:s0 tcontext=u:object_r:port:s0 tclass=tcp_socket permissive=0
allow sh port:tcp_socket { name_connect };

# avc: denied { ioctl } for pid=6685, comm="/bin/top" path="dev/pts/0" ioctlcmd=0x5401 scontext=u:r:sh:s0 tcontext=u:object_r:devpts:s0 tclass=chr_file permissive=0
# avc: denied { ioctl } for pid=6685, comm="/bin/top" path="dev/pts/0" ioctlcmd=0x5404 scontext=u:r:sh:s0 tcontext=u:object_r:devpts:s0 tclass=chr_file permissive=0
allow sh devpts:chr_file { ioctl };
allowxperm sh devpts:chr_file ioctl { 0x5401 0x5404 };

# avc: denied { read open } for pid=6685, comm="/bin/top" path="/proc/6052/task" scontext=u:r:sh:s0 tcontext=u:r:debug_hap:s0 tclass=dir permissive=0
allow sh debug_hap:dir { read open };

# avc: denied { read open } for pid=6685, comm="/bin/top" path="/proc/stat" scontext=u:r:sh:s0 tcontext=u:object_r:proc_stat_file:s0 tclass=file permissive=0
allow sh proc_stat_file:file { read open };

# avc: denied { read open } for pid=6685, comm="/bin/top" path="/proc/meminfo" scontext=u:r:sh:s0 tcontext=u:object_r:proc_meminfo_file:s0 tclass=file permissive=0
allow sh proc_meminfo_file:file { read open };

# avc: denied { read open } for pid=6685, comm="/bin/top" path="/sys/devices/system/cpu" scontext=u:r:sh:s0 tcontext=u:object_r:sysfs_devices_system_cpu:s0 tclass=dir permissive=0
allow sh sysfs_devices_system_cpu:dir { read open };
')
