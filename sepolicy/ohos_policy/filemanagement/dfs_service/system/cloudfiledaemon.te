# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

allow cloudfiledaemon sa_accesstoken_manager_service:samgr_class { get };
allow cloudfiledaemon sa_param_watcher:samgr_class { get };
allow cloudfiledaemon param_watcher:binder { call transfer };
allow cloudfiledaemon dev_unix_socket:dir { search };
allow cloudfiledaemon paramservice_socket:sock_file { write };
allow cloudfiledaemon kernel:unix_stream_socket { connectto };
allow cloudfiledaemon netsysnative:unix_stream_socket { connectto };
allow cloudfiledaemon netmanager:binder { call transfer };
allow cloudfiledaemon accesstoken_service:binder { call };
allow cloudfiledaemon data_service_file:dir { search };
allow cloudfiledaemon sa_foundation_cesfwk_service:samgr_class { get };
allow cloudfiledaemon foundation:binder { transfer call };
allow cloudfiledaemon sa_foundation_abilityms:samgr_class { get };
allow cloudfiledaemon sa_foundation_battery_service:samgr_class { get };
allow cloudfiledaemon data_app_file:dir { search open read write };
allow cloudfiledaemon data_app_el2_file:dir { search read write open };
allow cloudfiledaemon data_app_el2_file:file { lock getattr open read write ioctl map };
allow cloudfiledaemon dev_fuse_file:chr_file { read write };
allow cloudfiledaemon data_service_el2_file:dir { search };
allow cloudfiledaemon data_service_el2_hmdfs:dir { create search read open write add_name };
allow cloudfiledaemon data_service_el2_hmdfs:file { create setattr getattr read open write };
allow cloudfiledaemon hmdfs:dir { search write remove_name add_name create open };
allow cloudfiledaemon hmdfs:file { read open ioctl getattr create append rename };
allow cloudfiledaemon storage_daemon:fd { use };
allow cloudfiledaemon sa_filemanagement_cloud_sync_service:samgr_class { add };
allow cloudfiledaemon hap_domain:binder { call transfer };
debug_only(`
    allow cloudfiledaemon sh:binder { call };
')
allow cloudfiledaemon sa_net_conn_manager:samgr_class { get };
allow cloudfiledaemon dev_console_file:chr_file { read write };
allow cloudfiledaemon sa_filemanagement_cloud_daemon_service:samgr_class { add };
allow cloudfiledaemon data_service_el1_file:dir { search write add_name create remove_name };
allow cloudfiledaemon data_service_el1_file:file { create write open getattr ioctl setattr read rename unlink };
allow cloudfiledaemon hap_domain:binder { call };
allow cloudfiledaemon data_file:dir { search };
allow cloudfiledaemon dev_ashmem_file:chr_file { open };
allow cloudfiledaemon distributeddata:binder { transfer call };
allow cloudfiledaemon data_user_file:dir { read open search add_name write remove_name create };
allow cloudfiledaemon data_user_file:file { read open getattr write create rename };
allow cloudfiledaemon cloudfiledaemon:udp_socket { create bind read write node_bind };
allow cloudfiledaemon node:udp_socket { node_bind };
allow cloudfiledaemon cloudfiledaemon:tcp_socket { read create setopt connect  getopt  getattr write };
allow cloudfiledaemon port:tcp_socket { name_connect };
allow cloudfiledaemon system_bin_file:dir { search };
allow cloudfiledaemon medialibrary_hap_data_file:dir { search read open };
allow cloudfiledaemon medialibrary_hap_data_file:file { read open getattr write ioctl lock map };
